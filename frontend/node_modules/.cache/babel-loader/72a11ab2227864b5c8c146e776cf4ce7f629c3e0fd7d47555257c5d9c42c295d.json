{"ast":null,"code":"var _jsxFileName = \"/Users/lakshmi/UDEMY/Routing/12-adv-starting-project/frontend/src/Pages/Events.js\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Events() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Events, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = Events;\nexport const dataEventLoader = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  //const data=await response.json();\n  //console.log(data.events);\n  if (!response.ok) {\n    return json({\n      messgae: \"Error while fetching data from DB\"\n    }, {\n      status: 500\n    });\n  } else return response;\n};\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["json","useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","Events","_s","data","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","dataEventLoader","response","fetch","ok","messgae","status","$RefreshReg$"],"sources":["/Users/lakshmi/UDEMY/Routing/12-adv-starting-project/frontend/src/Pages/Events.js"],"sourcesContent":["import { json, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nfunction Events() {\n  const data = useLoaderData();\n  const events = data.events;\n\n  return (\n    <>\n      <EventsList events={events} />\n    </>\n  );\n}\n\nexport const dataEventLoader = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  //const data=await response.json();\n  //console.log(data.events);\n  if (!response.ok) {\n    return json({messgae:\"Error while fetching data from DB\"},{status:500})\n  } else return response;\n};\n\nexport default Events;\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAClD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAC5B,MAAMS,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACF,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACP,EAAA,CATQD,MAAM;EAAA,QACAN,aAAa;AAAA;AAAAe,EAAA,GADnBT,MAAM;AAWf,OAAO,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D;EACA;EACA,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAOpB,IAAI,CAAC;MAACqB,OAAO,EAAC;IAAmC,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACzE,CAAC,MAAM,OAAOJ,QAAQ;AACxB,CAAC;AAED,eAAeX,MAAM;AAAC,IAAAS,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}